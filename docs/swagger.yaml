basePath: /
definitions:
  domain.Book:
    properties:
      author:
        type: string
      id:
        type: integer
      publish_date:
        type: string
      rating:
        type: integer
      title:
        type: string
    type: object
  domain.SignInInput:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  domain.SignUpInput:
    properties:
      email:
        type: string
      name:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  domain.UpdateBookInput:
    properties:
      author:
        type: string
      publish_date:
        type: string
      rating:
        type: integer
      title:
        type: string
    type: object
  rest.errResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: andy.ahmedov@gmail.com
    name: Andy Ahmedov
    url: https://github.com/andy-ahmedov
  description: Service implementing crud operations
  title: CRUD API Service
  version: "1.2"
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: User authentication by email and password.
      operationId: sign-in
      parameters:
      - description: User info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: The JWT token was successfully generated.
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Registration of a new user in the system.
      operationId: sign-up
      parameters:
      - description: User info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.SignUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: The user has been successfully registered.
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errResponse'
      summary: SignUp
      tags:
      - auth
  /books:
    get:
      description: Getting all books.
      operationId: get-all-books
      produces:
      - application/json
      responses:
        "200":
          description: Books have been successfully received.
          schema:
            items:
              $ref: '#/definitions/domain.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errResponse'
      summary: getAllBooks
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Adding a book to the database.
      operationId: add-book
      parameters:
      - description: Book information
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Book'
      produces:
      - application/json
      responses:
        "200":
          description: The data has been successfully written.
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errResponse'
      summary: CreateBook
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Deleting a book by ID.
      operationId: delete-book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: The data has been successfully written.
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errResponse'
      summary: deleteBook
      tags:
      - id
    get:
      consumes:
      - application/json
      description: Retrieves a book by ID. If the book is not found, returns an error.
      operationId: get-book-by-id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errResponse'
      summary: GetBookByID
    put:
      consumes:
      - application/json
      description: Updating book data by ID.
      operationId: update-book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book update information
        in: body
        name: updateBook
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateBookInput'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errResponse'
      summary: updateBook
      tags:
      - id
swagger: "2.0"
